// Mocks generated by Mockito 5.2.0 from annotations
// in dicoding_mfde_submission/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:convert' as _i16;
import 'dart:typed_data' as _i17;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dicoding_mfde_submission/common/failure.dart' as _i7;
import 'package:dicoding_mfde_submission/data/datasources/db/database_helper.dart'
    as _i14;
import 'package:dicoding_mfde_submission/data/datasources/local_data_source.dart'
    as _i12;
import 'package:dicoding_mfde_submission/data/datasources/remote_data_source.dart'
    as _i10;
import 'package:dicoding_mfde_submission/data/models/movie_tv_detail_model.dart'
    as _i3;
import 'package:dicoding_mfde_submission/data/models/movie_tv_show_model.dart'
    as _i11;
import 'package:dicoding_mfde_submission/data/models/movie_tv_show_table.dart'
    as _i13;
import 'package:dicoding_mfde_submission/domain/entities/movie_tv_show.dart'
    as _i9;
import 'package:dicoding_mfde_submission/domain/entities/movie_tv_show_detail.dart'
    as _i8;
import 'package:dicoding_mfde_submission/domain/repositories/movie_tv_show_repository.dart'
    as _i5;
import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i15;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeMovieTvShowDetailResponse_1 extends _i1.Fake
    implements _i3.MovieTvShowDetailResponse {}

class _FakeResponse_2 extends _i1.Fake implements _i4.Response {}

class _FakeStreamedResponse_3 extends _i1.Fake implements _i4.StreamedResponse {
}

/// A class which mocks [MovieTvShowRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieTvShowRepository extends _i1.Mock
    implements _i5.MovieTvShowRepository {
  MockMovieTvShowRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> saveWatchlist(
          _i8.MovieTvShowDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>()))
          as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> removeWatchlist(
          _i8.MovieTvShowDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>()))
          as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>> getWatchlist() =>
      (super.noSuchMethod(Invocation.method(#getWatchlist, []),
              returnValue:
                  Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i9.MovieTvShow>>()))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>> getNowPlaying(
          String? type) =>
      (super.noSuchMethod(Invocation.method(#getNowPlaying, [type]),
              returnValue:
                  Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i9.MovieTvShow>>()))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>> getPopular(
          String? type) =>
      (super.noSuchMethod(Invocation.method(#getPopular, [type]),
              returnValue:
                  Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i9.MovieTvShow>>()))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>> getTopRated(
          String? type) =>
      (super.noSuchMethod(Invocation.method(#getTopRated, [type]),
              returnValue:
                  Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i9.MovieTvShow>>()))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i8.MovieTvShowDetail>> getDetail(
          int? id, String? type) =>
      (super.noSuchMethod(Invocation.method(#getDetail, [id, type]),
              returnValue:
                  Future<_i2.Either<_i7.Failure, _i8.MovieTvShowDetail>>.value(
                      _FakeEither_0<_i7.Failure, _i8.MovieTvShowDetail>()))
          as _i6.Future<_i2.Either<_i7.Failure, _i8.MovieTvShowDetail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>> getRecommendations(
          int? id, String? type) =>
      (super.noSuchMethod(Invocation.method(#getRecommendations, [id, type]),
              returnValue:
                  Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i9.MovieTvShow>>()))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>> search(
          String? query, String? type) =>
      (super.noSuchMethod(Invocation.method(#search, [query, type]),
              returnValue:
                  Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i9.MovieTvShow>>()))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i9.MovieTvShow>>>);
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i10.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i11.MovieTvShowModel>> getNowPlaying(String? type) =>
      (super.noSuchMethod(Invocation.method(#getNowPlaying, [type]),
              returnValue: Future<List<_i11.MovieTvShowModel>>.value(
                  <_i11.MovieTvShowModel>[]))
          as _i6.Future<List<_i11.MovieTvShowModel>>);
  @override
  _i6.Future<List<_i11.MovieTvShowModel>> getPopular(String? type) =>
      (super.noSuchMethod(Invocation.method(#getPopular, [type]),
              returnValue: Future<List<_i11.MovieTvShowModel>>.value(
                  <_i11.MovieTvShowModel>[]))
          as _i6.Future<List<_i11.MovieTvShowModel>>);
  @override
  _i6.Future<List<_i11.MovieTvShowModel>> getTopRated(String? type) =>
      (super.noSuchMethod(Invocation.method(#getTopRated, [type]),
              returnValue: Future<List<_i11.MovieTvShowModel>>.value(
                  <_i11.MovieTvShowModel>[]))
          as _i6.Future<List<_i11.MovieTvShowModel>>);
  @override
  _i6.Future<_i3.MovieTvShowDetailResponse> getDetail(int? id, String? type) =>
      (super.noSuchMethod(Invocation.method(#getDetail, [id, type]),
              returnValue: Future<_i3.MovieTvShowDetailResponse>.value(
                  _FakeMovieTvShowDetailResponse_1()))
          as _i6.Future<_i3.MovieTvShowDetailResponse>);
  @override
  _i6.Future<List<_i11.MovieTvShowModel>> getRecommendations(
          int? id, String? type) =>
      (super.noSuchMethod(Invocation.method(#getRecommendations, [id, type]),
              returnValue: Future<List<_i11.MovieTvShowModel>>.value(
                  <_i11.MovieTvShowModel>[]))
          as _i6.Future<List<_i11.MovieTvShowModel>>);
  @override
  _i6.Future<List<_i11.MovieTvShowModel>> search(String? query, String? type) =>
      (super.noSuchMethod(Invocation.method(#search, [query, type]),
              returnValue: Future<List<_i11.MovieTvShowModel>>.value(
                  <_i11.MovieTvShowModel>[]))
          as _i6.Future<List<_i11.MovieTvShowModel>>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i12.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlist(_i13.MovieTvShowTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<String> removeWatchlist(_i13.MovieTvShowTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i13.MovieTvShowTable?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<_i13.MovieTvShowTable?>.value())
          as _i6.Future<_i13.MovieTvShowTable?>);
  @override
  _i6.Future<List<_i13.MovieTvShowTable>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: Future<List<_i13.MovieTvShowTable>>.value(
                  <_i13.MovieTvShowTable>[]))
          as _i6.Future<List<_i13.MovieTvShowTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i14.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i15.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: Future<_i15.Database?>.value())
          as _i6.Future<_i15.Database?>);
  @override
  _i6.Future<int> insertWatchlist(_i13.MovieTvShowTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<int> removeWatchlist(_i13.MovieTvShowTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i6.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_2()))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_2()))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i16.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_2()))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i16.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_2()))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i16.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_2()))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i16.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_2()))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i17.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i17.Uint8List>.value(_i17.Uint8List(0)))
          as _i6.Future<_i17.Uint8List>);
  @override
  _i6.Future<_i4.StreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i4.StreamedResponse>.value(_FakeStreamedResponse_3()))
          as _i6.Future<_i4.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
